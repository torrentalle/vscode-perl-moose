jobs:
  - job: Test
    pool:
      name: Hosted Ubuntu 1604
      demands: npm
    steps:
      - task: NodeTool@0
        displayName: 'Use Node 10.x'
        inputs:
          versionSpec: 10.x
      - task: Npm@1
        displayName: 'Install dependencies'
        inputs:
          verbose: false
      - task: Npm@1
        displayName: 'Compile sources'
        inputs:
          command: custom
          verbose: false
          customCommand: 'run build'
      - script: |
          set -e
          /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
          disown -ar
        displayName: 'Start xvfb'
      - task: Npm@1
        displayName: 'Run tests'
        inputs:
          command: custom
          verbose: false
          customCommand: 'run test'  
        env:
          DISPLAY: :10
          CODE_TESTS_REPORTER: xunit
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/TEST-*.xml'
          mergeTestResults: true
          testRunTitle: 'Extension Tests'
        condition: always()
      - task: Npm@1
        displayName: 'Build package'
        inputs:
          command: custom
          verbose: false
          customCommand: 'run build:package'
      - task: CopyFiles@2
        displayName: 'Copy package package'
        inputs:
          Contents: '*.vsix'
          TargetFolder: 'package/'
          OverWrite: true
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'package'
          targetPath: 'package'
      - task: CopyFiles@2
        inputs:
          Contents: |
            out/test/installation/**
            package.json
            testFixture/**
          TargetFolder: 'install-tests'
          CleanTargetFolder: true
          OverWrite: true
      - task: PublishPipelineArtifact@0
        inputs:
          artifactName: 'install-tests'
          targetPath: 'install-tests'
  # - job: Install_Windows
  #   dependsOn: Test
  #   pool:
  #     name: Hosted VS2017
  #     demands: npm
  #   steps:
  #     - task: NodeTool@0
  #       displayName: 'Use Node 10.x'
  #       inputs:
  #         versionSpec: 10.x
  #     - task: Npm@1
  #       displayName: 'Install dependencies'
  #       inputs:
  #         verbose: false
  #     - task: DownloadPipelineArtifact@0
  #       inputs:
  #         artifactName: 'package'
  #         targetPath: $(System.DefaultWorkingDirectory)
  #     - task: Npm@1
  #       displayName: 'Compile sources'
  #       inputs:
  #         command: custom
  #         verbose: false
  #         customCommand: 'run build'
  #     - task: Npm@1
  #       displayName: 'Run tests'
  #       inputs:
  #         command: custom
  #         verbose: false
  #         customCommand: 'run test:package'
  #       env:
  #         CODE_TESTS_REPORTER: xunit
  #     - task: PublishTestResults@2
  #       inputs:
  #         testResultsFormat: 'JUnit'
  #         testResultsFiles: '**/TEST-*.xml'
  #         mergeTestResults: true
  #         testRunTitle: 'Installation Tests (win32)'
  #       condition: always()
  # - job: Install_MacOS
  #   dependsOn: Test
  #   pool:
  #     name: Hosted macOS
  #     demands: npm
  #   steps:
  #     - task: NodeTool@0
  #       displayName: 'Use Node 10.x'
  #       inputs:
  #         versionSpec: 10.x
  #     - task: Npm@1
  #       displayName: 'Install dependencies'
  #       inputs:
  #         verbose: false
  #     - task: DownloadPipelineArtifact@0
  #       inputs:
  #         artifactName: 'package'
  #         targetPath: $(System.DefaultWorkingDirectory)
  #     - task: Npm@1
  #       displayName: 'Compile sources'
  #       inputs:
  #         command: custom
  #         verbose: false
  #         customCommand: 'run build'
  #     - task: Npm@1
  #       displayName: 'Run tests'
  #       inputs:
  #         command: custom
  #         verbose: false
  #         customCommand: 'run test:package'
  #       env:
  #         CODE_TESTS_REPORTER: xunit
  #     - task: PublishTestResults@2
  #       inputs:
  #         testResultsFormat: 'JUnit'
  #         testResultsFiles: '**/TEST-*.xml'
  #         mergeTestResults: true
  #         testRunTitle: 'Installation Tests (macOS)'
  #       condition: always()
  # - job: Install_Linux
  #   dependsOn: Test
  #   pool:
  #     name: Hosted Ubuntu 1604
  #     demands: npm
  #   steps:
  #     - task: NodeTool@0
  #       displayName: 'Use Node 10.x'
  #       inputs:
  #         versionSpec: 10.x
  #     - task: Npm@1
  #       displayName: 'Install dependencies'
  #       inputs:
  #         verbose: false
  #     - task: DownloadPipelineArtifact@0
  #       inputs:
  #         artifactName: 'package'
  #         targetPath: $(System.DefaultWorkingDirectory)
  #     - task: Npm@1
  #       displayName: 'Compile sources'
  #       inputs:
  #         command: custom
  #         verbose: false
  #         customCommand: 'run build'
  #     - script: |
  #         set -e
  #         /usr/bin/Xvfb :10 -ac >> /tmp/Xvfb.out 2>&1 &
  #         disown -ar
  #       displayName: 'Start xvfb'
  #     - task: Npm@1
  #       displayName: 'Run tests'
  #       inputs:
  #         command: custom
  #         verbose: false
  #         customCommand: 'run test:package'  
  #       env:
  #         DISPLAY: :10
  #         CODE_TESTS_REPORTER: xunit
  #     - task: PublishTestResults@2
  #       inputs:
  #         testResultsFormat: 'JUnit'
  #         testResultsFiles: '**/TEST-*.xml'
  #         mergeTestResults: true
  #         testRunTitle: 'Installation Tests (Linux)'
  #         condition: always()
